# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Automated-Testing-Framework

on:  
  workflow_dispatch:
    inputs:
      Browser:
        type: choice
        description: "Choose the browser type"
        options:
        - "Chrome"
        - "Firefox"
      Timeout:
        description: "Please, specify time for waiting Web-Elements"
        required: true
        default: "30"
  push:
    branches:
      - 'Github-Action-Temp'
      - 'main'
  pull_request:
    branches:
      - 'Github-Action-Temp'
      - 'main'
  schedule:
    - cron: '0 0 * * *'
    
env:
  DOTNET_VERSION: '7.0.100' # The .NET SDK version to use

jobs:
  setup-env:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Install Selenium Grid server
        run: "java -jar selenium-server-4.6.0.jar standalone"
        with:
          wait-interval: 20
     
      - name: "Setup Chrome"
        if: ${{github.event.inputs.Browser == 'Chrome'}}
        uses: browser-actions/setup-chrome@latest
      
      - name: "Setup Firefox"
        if: ${{github.event.inputs.Browser == 'Firefox'}}
        uses: browser-actions/setup-firefox@latest


  build:
    needs: setup-env
    runs-on: ubuntu-latest

    steps:
        
    - name: Edit Browser value in Configuration.json   
      uses: MerthinTechnologies/edit-json-action@v1
      with:
        filename: '${{ github.workspace }}/Tests/Configuration.json'
        key: 'Browser'
        value: '${{ github.event.inputs.Browser }}'
        
    - name: Edit Timeout value in Configuration.json   
      uses: MerthinTechnologies/edit-json-action@v1
      with:
        filename: '${{ github.workspace }}/Tests/Configuration.json'
        key: 'Timeout'
        value: '${{ github.event.inputs.Timeout }}'

    - name: Run Api Tests
      run: dotnet test --filter TestCategory="ApiTest"

    - name: Run UI Tests
      run: dotnet test --filter TestCategory!="ApiTest"


  publish-result:
    runs-on: ubuntu-latest

    steps:

    - name: Publishing artifacts
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Failed test
        path: ${{ github.workspace }}/Tests/bin/Debug/net7.0/**.Jpeg